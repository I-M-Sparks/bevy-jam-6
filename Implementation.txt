Kenney-packs that fit "Rune Goldberg Machine" (potentially):
-Particle Pack
-Smoke Particles
-Physics assets
-Platformer Art Requests
-Puzzle Pack
-Pixel UI Pack
-Puzzle Pack 2
-Animal Pack
-Letter tiles
-Generic items
-Ranks Pack
-Crosshair Pack
-Simplified Platformer
-Roling Ball Assets
-Foliage sprites
-Emotes pack
-Splat Pack
-Rune Pack
-Shape Characters
-Cursor Pack
-Googly eyes
-Board game Icons

First steps:
-create window - DONE
-Render runes - DONE
-implement click & release - DONE
-implement drag & drop - DONE
--get cursor position on click/release - DONE

-figure out how to place sprite in specific position - DONE
-figure out how to change window size - CANCELLED; Window size is 1280 x 720, which is fine
-figure out how to render multiple assets - DONE
+++
next step: Prototype
-build for WASM/web (check playability)
-implement one rune magic effect (move in zero gravity single direction)
-implement start of chain reaction (including test attempts / final attempt logic)
-implement one follow up effect based on placed rune (triggered by the end of the previous effect)
--figure out how to detect "collision"
-enable/disable player input before-and-after/during chain reaction
-figure out how to track when a machine has reached it's conclusion (both success and failure)

goal: enable player to set up a single chain reaction with at least two components and play on web, with a detected failure/success
===========

============
Mininmal Game logic:
-shoot ball at rune
-triggers Rune
-pushes card into target position
-card completes straight
-straight completion summons donut

----> Implementation next steps:
-place rune slots
-enable player to put runes into slots
-activate/deactivate effect preview when rune is placed/removed
-add ball-firing-thingy
--decice what that is
-enable playing ball in ball-firing-thingy
-enable firing the ball (physics)
-decide how to activate follow up effects
-implement snapping to origin transform for all Pickables UNLESS they are placed in runeslot/ball-firing-thingy
===

Next Steps:
-get it running in a web browser (local) - DONE (bevy run web --open)
-add license to git repo - DONE
-upload to itch to go through the process - BLOCKED because itch.io is down
--follow up: DONE; how-to: build with 'bevy build web --bundle', then zip the folder containing the .html, and upload zip to itch.io-page
--NOTE: remove unused assets before zipping / remove from project; itch.io has a file-size limit of 1GB AND a file count limit of 1000

-complete the addition of physics so I can actually start implementing the puzzle(s) - DONE
-add puzzle(s)- TODO

===

Next Steps: 
-make it possible to replace runes with eacvh other ibnstead of stacking them - DONE
-add collision-handling for blue_ball and runes- DONE
-add kinematic effect for runes (aka moving things when rune-effect is activated)- - CHANGED, not using physics for animation, doing custom effect animation instad
-disable player input while machine is running - DONE
--& re-enable it when machine has stopped running - TODO
-add success/failure condition to machine - DONE
-add win/lose contidtion (not quite the same as success/failure: success = win, but failure != lose, since player has multiple attempts) - DONE